{"version":3,"file":"static/js/178.87c6657a.chunk.js","mappings":"yQAEaA,E,OACVC,GAAAA,GADmB,gI,SCCTC,EAAsB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAClC,OAAO,SAACH,EAAD,UACFG,EAASC,KAAI,SAACC,GACX,OAAO,UAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAKE,IAA1B,UAA+C,IAAEF,EAAKG,eAAe,MCapE,eAACC,EAAD,uDAAQ,GAAR,OAClBC,OAAOC,gBAAgB,IAAIC,WAAWH,IAAOI,QAAO,SAACN,EAAIO,GAWvD,OAREP,IAFFO,GAAQ,IACG,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,IAGT,GAAE,GAbe,CDboCG,GAA0C,KAEzF,E,kBEFM,SAASC,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KACA,GAA0BN,EAAAA,EAAAA,WAAS,GAAnC,eAAOO,EAAP,KAAcC,EAAd,KA0BA,OAxBAC,QAAQC,IAAIN,GACZK,QAAQC,IAAIH,IAEZI,EAAAA,EAAAA,YAAU,WAAM,wCAId,oGAEIH,GAAS,GACTF,GAAW,GAHf,UAIoCM,EAAAA,EAAAA,MAJpC,OAIUC,EAJV,OAKIC,EAAAA,GAAAA,QAAc,iCACdZ,GAAU,SAAAa,GAAS,wBAAQA,IAAR,OAAsBF,GAAtB,IANvB,kDAQIL,GAAS,GACTC,QAAQC,IAAR,MATJ,yBAWIJ,GAAW,GAXf,8EAJc,0DAkBdU,EACD,GAAE,CAACb,KAGF,4BACE,wBAAI,mBACHE,IAAW,SAAC,IAAD,KACZ,SAACtB,EAAD,CAAqBC,SAAUiB,MAGpC,C","sources":["components/TrandedMovieGallery/TrandedMovieGallery.styled.js","components/TrandedMovieGallery/TrandedMovieGallery.js","../node_modules/nanoid/index.browser.js","pages/HomePage.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const MovieList\n = styled.ul`\n   display: flex;\n   flex-direction: column;\n      margin-top: 30px;\n      align-items: start ;\n\n\n`","import { nanoid } from 'nanoid'\nimport { Link } from 'react-router-dom'\nimport { MovieList } from './TrandedMovieGallery.styled'\nexport const TrandedMovieGallery = ({ onMovies }) => {\n    return <MovieList>\n        {onMovies.map((item) => {\n            return <Link to={`/movies/${item.id}`} key={nanoid()}> {item.original_title} </Link> })}\n    </MovieList>\n        }\n\n       ","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import { GetTrandingMovies } from 'components/Api/Api';\nimport { AudioItem } from 'components/Loader/Loader';\nimport { TrandedMovieGallery } from 'components/TrandedMovieGallery/TrandedMovieGallery';\nimport { useEffect, useState } from 'react';\nimport { toast } from 'react-toastify';\n\nexport default function HomePage() {\n  const [movies, setMovies] = useState([]);\n  const [query, setQuery] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  console.log(setQuery);\n  console.log(error);\n\n  useEffect(() => {\n    // if (query === '') {\n    //   return;\n    // }\n    async function GetMovies() {\n      try {\n        setError(false);\n        setLoading(true);\n        const newTrandingMovies = await GetTrandingMovies();\n        toast.success('We have found tranding movies');\n        setMovies(prevState => [...prevState, ...newTrandingMovies]);\n      } catch (error) {\n        setError(true);\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    }\n    GetMovies();\n  }, [query]);\n\n  return (\n    <div>\n      <h1>Trending today</h1>\n      {loading && <AudioItem />}\n      <TrandedMovieGallery onMovies={movies} />\n    </div>\n  );\n}\n"],"names":["MovieList","styled","TrandedMovieGallery","onMovies","map","item","to","id","original_title","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","nanoid","HomePage","useState","movies","setMovies","query","setQuery","loading","setLoading","error","setError","console","log","useEffect","GetTrandingMovies","newTrandingMovies","toast","prevState","GetMovies"],"sourceRoot":""}